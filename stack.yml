version: '3.2'
services:
    zookeeper:
        build:
            context: ./sc4-zookeeper
        image: bde2020/pilot-sc4-zookeeper
        hostname: zookeeper
        container_name: sc4-zookeeper
        environment:
            - MYID=1
#            - INIT_DAEMON_STEP=setup_zookeeper
#            - INIT_DAEMON_BASE_URI=http://backend/init-daemon 
#            - ENABLE_INIT_DAEMON=true
        expose:
            - "2181"
        ports:
            - "2181:2181"
    kafka:
        build:
            context: ./sc4-kafka
        image: bde2020/pilot-sc4-kafka
        hostname: kafka
        container_name: sc4-kafka
        environment:
            - SERVICE_PRECONDITION=zookeeper:2181
            - ZOOKEEPER_SERVERS=zookeeper:2181
#            - INIT_DAEMON_STEP=setup_kafka
#            - ENABLE_INIT_DAEMON=true
            - INITIAL_TOPICS="taxi"
#            - INIT_DAEMON_BASE_URI=http://backend/init-daemon 
        depends_on:
            - zookeeper
        expose:
            - "9092"

#-----------------------------------------------------------------------------
# hadoop services
    namenode:
        image: bde2020/hadoop-namenode:2.0.0-hadoop2.7.4-java8
        hostname: namenode
        container_name: sc4-namenode
#        volumes:
#            - hadoop_namenode:/hadoop/dfs/name
        environment:
            CSS_SOURCE: "hadoop"
            CLUSTER_NAME: test
            INIT_DAEMON_STEP: "setup_hdfs"
            VIRTUAL_HOST: hdfs-namenode.big-data-europe.local
        env_file:
            - ./config/hadoop/hadoop.env

    datanode:
        image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
        hostname: datanode
        container_name: sc4-datanode
#        volumes:
#            - hadoop_datanode:/hadoop/dfs/data
        environment:
            SERVICE_PRECONDITION: "namenode:50070"
            CSS_SOURCE: "hadoop"
            VIRTUAL_HOST: hdfs-datanode.big-data-europe.local
            VIRTUAL_PORT: "50075"
            ENABLE_INIT_DAEMON: "false"
        env_file:
            - ./config/hadoop/hadoop.env

    resourcemanager:
        image: bde2020/hadoop-resourcemanager:2.0.0-hadoop2.7.4-java8
        hostname: resourcemanager
        container_name: sc4-resourcemanager
        environment:
            SERVICE_PRECONDITION: "namenode:50070 datanode:50075"
            VIRTUAL_HOST: hdfs-resourcemanager.demo.big-data-europe.local
            VIRTUAL_PORT: "8088"
            CSS_SOURCE: "hadoop-resource-manager"
        env_file:
            - ./config/hadoop/hadoop.env

    nodemanager:
        image: bde2020/hadoop-nodemanager:2.0.0-hadoop2.7.4-java8
        hostname: nodemanager
        container_name: sc4-nodemanager
        environment:
            SERVICE_PRECONDITION: "namenode:50070 datanode:50075 resourcemanager:8088"
            VIRTUAL_HOST: hdfs-nodemanager.demo.big-data-europe.local
            VIRTUAL_PORT: "8042"
            CSS_SOURCE: "hadoop-node-manager"
        env_file:
            - ./config/hadoop/hadoop.env

    historyserver:
        image: bde2020/hadoop-historyserver:2.0.0-hadoop2.7.4-java8
        hostname: historyserver
        container_name: sc4-historyserver
#        volumes:
#            - hadoop_historyserver:/hadoop/yarn/timeline
        environment:
            SERVICE_PRECONDITION: "namenode:50070 datanode:50075 resourcemanager:8088"
            VIRTUAL_HOST: hdfs-historyserver.demo.big-data-europe.local
            VIRTUAL_PORT: "8188"
            CSS_SOURCE: "hadoop-history-server"
        env_file:
            - ./config/hadoop/hadoop.env

    filebrowser:
        image: bde2020/hdfs-filebrowser
        hostname: filebrowser
        container_name: sc4-filebrowser
        expose:
            - "8088"
        environment:
            SERVICE_PRECONDITION: "namenode:50070 datanode:50075"
            NAMENODE_HOST: namenode
            VIRTUAL_HOST: hue.big-data-europe.local
            VIRTUAL_PORT: "8088"
        depends_on:
            - namenode
            - datanode

#-----------------------------------------------------------------------------
    flink-master:
        image: bde2020/flink-master:1.4.0-hadoop2.7
        hostname: flink-master
        container_name: sc4-flink-master
        expose:
            - "8081"
            - "8080"
        environment:
            SERVICE_PRECONDITION: "namenode:50070 datanode:50075 resourcemanager:8088"
            CSS_SOURCE: "flink-dashboard"
            ENABLE_INIT_DAEMON: "false"
            INIT_DAEMON_STEP: "setup_flink"
            VIRTUAL_HOST: flink-master.big-data-europe.local
            VIRTUAL_PORT: "8081"
#       volumes:
#             - ./data/flink-master:/data
        env_file:
              - ./config/hadoop/hadoop.env
        depends_on:
              - namenode
              - datanode

    flink-worker:
        image: bde2020/flink-worker:1.4.0-hadoop2.7
        hostname: flink-worker
        container_name: sc4-flink-worker
        environment:
            SERVICE_PRECONDITION: "flink-master:8081"
            FLINK_MASTER_PORT_6123_TCP_ADDR: "flink-master"
            FLINK_NUM_TASK_SLOTS: "2"
            CSS_SOURCE: "flink-dashboard"
            ENABLE_INIT_DAEMON: "false"
            VIRTUAL_HOST: flink-worker.big-data-europe.local
            VIRTUAL_PORT: "8080"
        depends_on:
              - flink-master

    producer:
        image: bde2020/pilot-sc4-producer
        hostname: producer
        container_name: sc4-producer
        build:
            context: .
            dockerfile: sc4-producer.dockerfile
        environment:
            SERVICE_PRECONDITION: "flink-master:8081 kafka:9092"
            START_DELAY: "20"
            HDFS_URL: hdfs://namenode:8020
            ENABLE_INIT_DAEMON: "false"
            INIT_DAEMON_STEP: floating_producer
            FLINK_MASTER_PORT_6123_TCP_ADDR: "flink-master"
            FLINK_MASTER_PORT_6123_TCP_PORT: "6123"
            FLINK_APPLICATION_ARGS: "--path hdfs://namenode:8020/user/hue/taxi_sample_10k.txt --topic taxi"
            INIT_DAEMON_BASE_URI: "http://backend/init-daemon"
        env_file:
            - ./config/hadoop/hadoop.env

    consumer:
        image: bde2020/pilot-sc4-consumer
        hostname: consumer
        container_name: sc4-consumer
        build:
            context: .
            dockerfile: sc4-consumer.dockerfile
        environment:
            SERVICE_PRECONDITION: "flink-master:8081 kafka:9092"
            START_DELAY: "20"
            HDFS_URL: hdfs://namenode:8020
            ENABLE_INIT_DAEMON: "false"
            INIT_DAEMON_STEP: floating_consumer
            FLINK_MASTER_PORT_6123_TCP_ADDR: "flink-master"
            FLINK_MASTER_PORT_6123_TCP_PORT: "6123"
            INIT_DAEMON_BASE_URI: "http://backend/init-daemon"
        env_file:
            - ./config/hadoop/hadoop.env


#-----------------------------------------------------------------------------
    elasticsearch:
        image: bde2020/sc4-elasticsearch
        hostname: elasticsearch
        container_name: sc4-elasticsearch
        environment:
            VIRTUAL_HOST: elasticsearch.big-data-europe.local
            VIRTUAL_PORT: "9200"
        build:
            context: sc4-elasticsearch/
        ports:
            - 9200:9200
            - 9300:9300

#   kibana:
#       image: kibana:5.6
#       hostname: kibana
#       container_name: sc4-kibana
#       environment:
#           SERVICE_PRECONDITION: "elasticsearch:9200"
#           ELASTICSEARCH_URL: http://elasticsearch:9200
#           VIRTUAL_HOST: kibana.big-data-europe.local
#           VIRTUAL_PORT: "5601"
#       ports:
#           - 5601:5601

#-----------------------------------------------------------------------------
# monitor and intialisation framework
    monitor:
        image: bde2020/pipeline-monitor-frontend:0.1.0
        hostname: monitor
        links:
            - backend
        depends_on:
            - backend
        environment:
              VIRTUAL_HOST: monitor.big-data-europe.local

    backend:
        image: semtech/mu-identifier:1.0.0
        hostname: backend

    dispatcher:
        build:
            context: .
            dockerfile: sc4-dispatcher.dockerfile
        image: bde2020/pilot-sc4-dispatcher
        hostname: dispatcher
# config/dispatcher.ex is copied into the image, see dockerfile
# for development bind this volume into the container
#       volumes:
#           - ./config:/config

    database:
        build:
            context: .
            dockerfile: sc4-database.dockerfile
        image: bde2020/pilot-sc4-database
        hostname: database
        environment:
            - SPARQL_UPDATE=true
            - DEFAULT_GRAPH=http://mu.semte.ch/application
            - VIRTUAL_HOST=virtuoso.big-data-europe.local
            - VIRTUAL_PORT=8890
# database/toLoad/pipeline.ttl is copied into the image, see dockerfile
# for development bind this volume into the container
#        volumes:
#            - ./data/database:/data

    pipeline:
        image: bde2020/mu-pipeline-service:0.1.0
        hostname: pipeline

    initdaemon:
        image: bde2020/mu-init-daemon-service:0.1.0
        hostname: initdaemon

    integratorui:
        build:
            context: .
            dockerfile: sc4-integratorui.dockerfile
        image: bde2020/pilot-sc4-integratorui
        hostname: integratorui
        environment:
            VIRTUAL_HOST: demo.big-data-europe.local
# config/integrator/user-interfaces is copied into the image, see dockerfile
# for development bind this volume into the container
#       volumes:
#           - ./config/integrator:/app/config

    csswrapper:
        image: bde2020/nginx-proxy-with-css
        hostname: csswrapper
        ports:
            - 80:80
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock:ro
#        environment:
#            - "constraint:node==172.26.0.175"
#            - DOCKER_HOST=tcp://172.26.0.175:2377

# into the image define docker host

networks:
    default:
        driver: overlay

